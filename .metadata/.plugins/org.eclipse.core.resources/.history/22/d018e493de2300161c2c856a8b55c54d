'''
Created on May 26, 2016

@author: Gianni
'''

from tkinter import *
from Tour import Tour
from tkinter.messagebox import showinfo

class TourGui():
    
    def __init__(self):
        
        # Starts GUI
        root = Tk()
        root.wm_title('Tour')
        
        # Top Frame
        topFrame = Frame(root, pady = 20, padx = 20)
        orLabel = Label(topFrame, text = 'Origin').pack()
        self.orEntry = Entry(topFrame, width = 28, relief = SUNKEN, borderwidth = 3)
        self.orEntry.pack()
        desLabel = Label(topFrame, text = 'Destination').pack()
        self.desEntry = Entry(topFrame, width = 28, relief = SUNKEN, borderwidth = 3)
        self.desEntry.pack()
        mdLabel = Label(topFrame, text = 'Mode').pack()
        self.mdEntry = Entry(topFrame, width = 28, relief = SUNKEN, borderwidth = 3)
        self.mdEntry.pack()
        topFrame.pack()
        
        # Bottom Frame
        botFrame = Frame(root, pady = 20, padx = 20)
        distLabel = Label(botFrame, text = 'Distance (m)').pack()
        self.distEntry = Entry(botFrame, width = 28, relief = SUNKEN, borderwidth = 3)
        self.distEntry.pack()
        distButton = Button(botFrame, relief = RAISED, width = 14, text = 'Get Distance', command = self.onClick).pack()
        botFrame.pack()
        
        # Main Loop
        root.mainloop()
            
    def onClick(self):
        
        # Gets the entry fields
        origin = self.orEntry.get()
        destination = self.desEntry.get()
        mode = self.mdEntry.get()
        
        modeList = ['Driving', 'driving', 'Biking', 'biking', 'Walking', 'walking', '']
        
        print ('start' + mode + 'end')
        
        # An error message pops up if either or both of the entry fields are empty
        if (origin == '' or destination == ''):
            showinfo(title = 'Error: Empty Fields!', message = 'Either or both of the Origin or Destination fields are empty.')
        
        # An error message pops up if the mode is either of the three types or empty
        elif (mode != 'driving' or mode != 'biking' or mode != 'walking' or mode != ''):
            showinfo(title = 'Error: Invalid Mode!', message = 'Invalid mode. Valid modes are \'driving\', \'biking\', or \'walking\'.')
            
        else:
        
            aTour = Tour(origin, destination)
            distance = aTour.distance(mode)
            
            # Checks if the value returned from the Tour class is a number, and then inserts the value into distEntry
            if (distance.isdigit()):
                self.distEntry.delete(0, END)
                self.distEntry.insert(INSERT, distance)
            # If the value that is returned is a string, it prints it as an error message instead
            else:
                showinfo(title = 'Error: Distance not found!', message = distance)
                   
TourGui()